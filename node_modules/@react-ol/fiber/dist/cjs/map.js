"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Map = void 0;
var _react = _interopRequireWildcard(require("react"));
var _fp = require("lodash/fp");
var _renderer = require("./renderer");
var _context = require("./context");
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source){
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                }
            }
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {};
        if (obj != null) {
            for(var key in obj){
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
                    if (desc.get || desc.set) {
                        Object.defineProperty(newObj, key, desc);
                    } else {
                        newObj[key] = obj[key];
                    }
                }
            }
        }
        newObj.default = obj;
        return newObj;
    }
}
function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;
    if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for(i = 0; i < sourceSymbolKeys.length; i++){
            key = sourceSymbolKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
            target[key] = source[key];
        }
    }
    return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
var defaultArgs = [
    {}
];
var defaultStyle = {
    width: "100%",
    height: "400px"
};
var Map = /*#__PURE__*/ (0, _react).forwardRef(function(_param, ref) {
    var children = _param.children, _args = _param.args, args = _args === void 0 ? defaultArgs : _args, _style = _param.style, style = _style === void 0 ? defaultStyle : _style, className = _param.className, containerRef = _param.containerRef, mapProps = _objectWithoutProperties(_param, [
        "children",
        "args",
        "style",
        "className",
        "containerRef"
    ]);
    var mapContainerRef = (0, _react).useRef(null);
    var ref1 = _slicedToArray((0, _react).useState(null), 2), map = ref1[0], setMap = ref1[1];
    (0, _react).useEffect(function() {
        if (mapContainerRef.current) {
            var wrapped = /*#__PURE__*/ _react.default.createElement("olMap", _extends({}, mapProps, {
                args: args,
                target: mapContainerRef.current,
                ref: ref
            }), (0, _fp).isNull(map) ? null : /*#__PURE__*/ _react.default.createElement(_context.MapProvider, {
                value: map
            }, children));
            var returnedMap = (0, _renderer).render(wrapped, mapContainerRef.current);
            if ((0, _fp).isNull(map) && !(0, _fp).isNull(returnedMap)) {
                setMap(function(oldMap) {
                    return (0, _fp).isNull(oldMap) ? returnedMap : oldMap;
                });
            }
        }
    }, [
        children,
        mapContainerRef.current,
        map
    ]);
    var setRef = function(value) {
        if ((0, _fp).isNil(value)) {
            return;
        }
        if ((0, _fp).isFunction(containerRef)) {
            containerRef(value);
        } else if (!(0, _fp).isNil(containerRef)) {
            // eslint-disable-next-line no-param-reassign
            (containerRef).current = value;
        }
        if ((0, _fp).isFunction(mapContainerRef)) {
            mapContainerRef(value);
        } else if (!(0, _fp).isNil(mapContainerRef)) {
            // eslint-disable-next-line no-param-reassign
            (mapContainerRef).current = value;
        }
    };
    return /*#__PURE__*/ _react.default.createElement("div", {
        style: style,
        className: className,
        ref: setRef
    });
});
exports.Map = Map;
