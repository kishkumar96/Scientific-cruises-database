import React from "react";
import { Object as OlObject } from "ol";
import { ReactOlFiber } from "./types";
import { CatalogueItem } from "./catalogue";
export interface ObjectHash {
    [name: string]: OlObject;
}
export declare type Detach<ParentItem extends CatalogueItem, ChildItem extends CatalogueItem> = (parent: Instance<ParentItem>, child: Instance<ChildItem, ParentItem>) => void;
export declare type Attach<ParentItem extends CatalogueItem, ChildItem extends CatalogueItem> = string | ((parent: Omit<Instance<ParentItem>, typeof MetaOlFiber>, child: Omit<Instance<ChildItem, ParentItem>, typeof MetaOlFiber>, parentInstance: Instance<ParentItem>, childInstance: Instance<ChildItem, ParentItem>) => Detach<ParentItem, ChildItem>);
export declare type Type = keyof ReactOlFiber.IntrinsicElements;
export declare type Props = ReactOlFiber.IntrinsicElements[Type];
declare const MetaOlFiber: unique symbol;
export declare type Instance<SelfItem extends CatalogueItem = CatalogueItem, ParentItem extends CatalogueItem = CatalogueItem> = InstanceType<SelfItem["object"]> & {
    [MetaOlFiber]: {
        kind: SelfItem["kind"];
        type: SelfItem["type"];
        parent?: Instance<ParentItem>;
        attach?: Attach<ParentItem, SelfItem>;
        detach?: Detach<ParentItem, SelfItem>;
    };
};
export declare type Container<Item extends CatalogueItem = CatalogueItem> = Instance<Item>;
export declare type OpaqueHandle = any;
export declare type TextInstance = null;
export declare type HydratableInstance<Item extends CatalogueItem = CatalogueItem, ParentItem extends CatalogueItem = CatalogueItem> = Instance<Item, ParentItem>;
export declare type PublicInstance<Item extends CatalogueItem = CatalogueItem, ParentItem extends CatalogueItem = CatalogueItem> = Instance<Item, ParentItem>;
export declare type SuspenseInstance<Item extends CatalogueItem = CatalogueItem, ParentItem extends CatalogueItem = CatalogueItem> = Instance<Item, ParentItem>;
export declare type HostContext = {};
export declare type UpdatePayload = boolean;
export declare type ChildSet = void;
export declare type TimeoutHandle = number;
export declare type NoTimeout = number;
export declare function render(what: React.ReactNode, where: HTMLElement): PublicInstance<CatalogueItem, CatalogueItem> | React.Component<any, any, any> | null;
export {};
//# sourceMappingURL=renderer.d.ts.map